[gd_scene load_steps=9 format=2]

[ext_resource path="res://Assets/Objects/EnemyObjects/polycat.dae" type="PackedScene" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody

const MOVE_SPEED = 2.2

onready var model = $Graphics
onready var anim = $Graphics/AnimationPlayer
onready var gui = get_node(\"/root/World/GUI\")
onready var turn_timer = get_node(\"/root/World/TurnTimer\")
onready var map = get_node(\"/root/World/Map\")

var rng = RandomNumberGenerator.new()

var MAX_HEALTH = 100
var health

var ready_status = false
var in_turn = false
var proposed_action = 'idle'

var map_pos = []
var direction_facing = ''

var target_pos = Vector3()
var saved_pos = Vector3()

# Desired flow:
# Turn starts:
# decide_action()
# AI will decide on an action, check if it is possible.
# If it is: set_action()
# ready_status = true
# turn will start in TurnTimer
# process_turn()
# all turns are taken
# end_turn()

func _ready():
	randomize()
	health = MAX_HEALTH
	#print(health)
func setup_actor():
	turn_timer.add_to_timer_group(self)
	map_pos = map.place_on_map(self, translation)

func _physics_process(_delta):
	if turn_timer.time_left == 0: # We don't wanna decide a turn if timer isn't 0.
		if ready_status == false:
			decide_next_action()
	
	if in_turn == true:
		if proposed_action.split(\" \")[0] == 'move':
			translation = translation.linear_interpolate(target_pos, (1-turn_timer.time_left)) 

func decide_next_action():
	randomize()
	match rng.randi_range(1,4):
		1:
			if check_move_action('move up'):
				set_action('move up')
		2:
			if check_move_action('move down'):
				set_action('move down')
		3:
			if check_move_action('move left'):
				set_action('move left')
		4:
			if check_move_action('move right'):
				set_action('move right')

func set_action(action):
	proposed_action = action
	gui.set_action(proposed_action)
	ready_status = true

func process_turn():
	# Sets target positions for move and basic attack.
	if proposed_action.split(\" \")[0] == 'move' || proposed_action == 'basic attack':
		match proposed_action.split(\" \")[1]:
			'up':
				set_direction('up')
				target_pos.x = translation.x + MOVE_SPEED
				target_pos.z = translation.z
			'down':
				set_direction('down')
				target_pos.x = translation.x + -MOVE_SPEED
				target_pos.z = translation.z
			'left':
				set_direction('left')
				target_pos.z = translation.z + -MOVE_SPEED
				target_pos.x = translation.x
			'right':
				set_direction('right')
				target_pos.z = translation.z + MOVE_SPEED
				target_pos.x = translation.x

	# If position will actually be changing, update to map.
	if proposed_action.split(\" \")[0] == 'move':
		map_pos = map.move_on_map(self, translation, target_pos)
	
	in_turn = true

func end_turn():
	target_pos = translation
	saved_pos = translation
	proposed_action = ''
	in_turn = false
	ready_status = false
	

func attacked_by_player():
	health -= 10
	#print(health)

# Movement related functions.
func check_move_action(move):
	match move:
		'move up':
			if map.tile_available(map_pos[0] + 1, map_pos[1]) == true: 
				proposed_action = 'move up'
				return true
		'move down':
			if map.tile_available(map_pos[0] - 1, map_pos[1]) == true:
				proposed_action = 'move down'
				return true
		'move left':
			if map.tile_available(map_pos[0], map_pos[1] - 1) == true: 
				proposed_action = 'move left'
				return true
		'move right':
			if map.tile_available(map_pos[0], map_pos[1] + 1) == true: 
				proposed_action = 'move right'
				return true
				
	return false

func set_direction(direction):
	match direction:
		'up':
			direction_facing = \"up\"
			model.rotation_degrees.y = 90
		'down':
			direction_facing = \"down\"
			model.rotation_degrees.y = 90 + 180
		'left':
			direction_facing = \"left\"
			model.rotation_degrees.y = 180
		'right':
			direction_facing = \"right\"
			model.rotation_degrees.y = 180 + 180
"

[sub_resource type="ArrayMesh" id=2]
resource_name = "Cone"
surfaces/0 = {
"aabb": AABB( -0.968571, -0.985833, -1.80097, 1.95571, 3.46023, 1.98843 ),
"array_data": PoolByteArray( 212, 12, 15, 63, 4, 122, 72, 190, 121, 244, 63, 62, 79, 21, 160, 0, 0, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 244, 88, 196, 187, 4, 122, 72, 190, 69, 57, 142, 190, 79, 21, 160, 0, 0, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 244, 88, 196, 187, 254, 171, 205, 63, 2, 215, 239, 61, 79, 21, 160, 0, 1, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 248, 82, 120, 189, 242, 151, 59, 63, 153, 97, 197, 191, 2, 63, 146, 0, 4, 0, 0, 0, 31, 254, 223, 1, 0, 0, 0, 0, 16, 58, 234, 190, 72, 205, 152, 62, 20, 134, 230, 191, 2, 63, 146, 0, 4, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 34, 9, 35, 191, 226, 56, 104, 63, 40, 44, 186, 191, 2, 63, 146, 0, 4, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 244, 88, 196, 187, 254, 171, 205, 63, 2, 215, 239, 61, 177, 21, 160, 0, 1, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 244, 88, 196, 187, 4, 122, 72, 190, 69, 57, 142, 190, 177, 21, 160, 0, 0, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 56, 30, 18, 191, 4, 122, 72, 190, 121, 244, 63, 62, 177, 21, 160, 0, 0, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 212, 12, 15, 63, 4, 122, 72, 190, 121, 244, 63, 62, 0, 4, 126, 0, 0, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 244, 88, 196, 187, 254, 171, 205, 63, 2, 215, 239, 61, 0, 4, 126, 0, 1, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 56, 30, 18, 191, 4, 122, 72, 190, 121, 244, 63, 62, 0, 4, 126, 0, 0, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 244, 88, 196, 187, 4, 122, 72, 190, 69, 57, 142, 190, 0, 129, 0, 0, 0, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 212, 12, 15, 63, 4, 122, 72, 190, 121, 244, 63, 62, 0, 129, 0, 0, 0, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 56, 30, 18, 191, 4, 122, 72, 190, 121, 244, 63, 62, 0, 129, 0, 0, 0, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 34, 9, 35, 191, 226, 56, 104, 63, 40, 44, 186, 191, 40, 97, 70, 0, 4, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 244, 88, 196, 187, 4, 122, 72, 190, 69, 57, 142, 190, 40, 97, 70, 0, 0, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 248, 82, 120, 189, 242, 151, 59, 63, 153, 97, 197, 191, 40, 97, 70, 0, 4, 0, 0, 0, 31, 254, 223, 1, 0, 0, 0, 0, 244, 88, 196, 187, 4, 122, 72, 190, 69, 57, 142, 190, 99, 195, 207, 0, 0, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 16, 58, 234, 190, 72, 205, 152, 62, 20, 134, 230, 191, 99, 195, 207, 0, 4, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 248, 82, 120, 189, 242, 151, 59, 63, 153, 97, 197, 191, 99, 195, 207, 0, 4, 0, 0, 0, 31, 254, 223, 1, 0, 0, 0, 0, 16, 58, 234, 190, 72, 205, 152, 62, 20, 134, 230, 191, 140, 211, 19, 0, 4, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 244, 88, 196, 187, 4, 122, 72, 190, 69, 57, 142, 190, 140, 211, 19, 0, 0, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 34, 9, 35, 191, 226, 56, 104, 63, 40, 44, 186, 191, 140, 211, 19, 0, 4, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 145, 210, 98, 62, 32, 189, 232, 189, 132, 151, 2, 62, 190, 0, 149, 0, 2, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 133, 91, 139, 62, 184, 68, 194, 189, 136, 50, 197, 61, 190, 0, 149, 0, 2, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 61, 148, 151, 62, 142, 95, 124, 191, 230, 84, 151, 61, 190, 0, 149, 0, 2, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 133, 91, 139, 62, 184, 68, 194, 189, 136, 50, 197, 61, 235, 119, 37, 0, 2, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 145, 210, 98, 62, 32, 189, 232, 189, 132, 151, 2, 62, 235, 119, 37, 0, 2, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 59, 9, 178, 62, 24, 7, 203, 189, 18, 109, 28, 62, 235, 119, 37, 0, 2, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 61, 148, 151, 62, 142, 95, 124, 191, 230, 84, 151, 61, 76, 4, 155, 0, 2, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 133, 91, 139, 62, 184, 68, 194, 189, 136, 50, 197, 61, 76, 4, 155, 0, 2, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 59, 9, 178, 62, 24, 7, 203, 189, 18, 109, 28, 62, 76, 4, 155, 0, 2, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 145, 210, 98, 62, 32, 189, 232, 189, 132, 151, 2, 62, 233, 247, 124, 0, 2, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 61, 148, 151, 62, 142, 95, 124, 191, 230, 84, 151, 61, 233, 247, 124, 0, 2, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 59, 9, 178, 62, 24, 7, 203, 189, 18, 109, 28, 62, 233, 247, 124, 0, 2, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 244, 88, 196, 187, 254, 171, 205, 63, 2, 215, 239, 61, 0, 0, 127, 0, 1, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 243, 108, 64, 63, 11, 146, 8, 64, 14, 215, 239, 61, 0, 0, 127, 0, 1, 0, 0, 0, 98, 212, 156, 43, 0, 0, 0, 0, 88, 172, 59, 191, 11, 146, 8, 64, 182, 214, 239, 61, 0, 0, 127, 0, 1, 0, 0, 0, 30, 201, 224, 54, 0, 0, 0, 0, 159, 48, 118, 63, 226, 123, 236, 63, 40, 72, 226, 60, 17, 231, 123, 0, 1, 0, 0, 0, 124, 217, 130, 38, 0, 0, 0, 0, 243, 108, 64, 63, 11, 146, 8, 64, 14, 215, 239, 61, 17, 231, 123, 0, 1, 0, 0, 0, 98, 212, 156, 43, 0, 0, 0, 0, 244, 88, 196, 187, 254, 171, 205, 63, 2, 215, 239, 61, 17, 231, 123, 0, 1, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 224, 180, 124, 63, 122, 92, 30, 64, 19, 215, 239, 61, 26, 238, 122, 0, 1, 0, 0, 0, 152, 210, 102, 45, 0, 0, 0, 0, 243, 108, 64, 63, 11, 146, 8, 64, 14, 215, 239, 61, 26, 238, 122, 0, 1, 0, 0, 0, 98, 212, 156, 43, 0, 0, 0, 0, 159, 48, 118, 63, 226, 123, 236, 63, 40, 72, 226, 60, 26, 238, 122, 0, 1, 0, 0, 0, 124, 217, 130, 38, 0, 0, 0, 0, 244, 88, 196, 187, 254, 171, 205, 63, 2, 215, 239, 61, 238, 231, 123, 0, 1, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 88, 172, 59, 191, 11, 146, 8, 64, 182, 214, 239, 61, 238, 231, 123, 0, 1, 0, 0, 0, 30, 201, 224, 54, 0, 0, 0, 0, 9, 112, 113, 191, 226, 123, 236, 63, 226, 70, 226, 60, 238, 231, 123, 0, 1, 0, 0, 0, 219, 208, 35, 47, 0, 0, 0, 0, 88, 172, 59, 191, 11, 146, 8, 64, 182, 214, 239, 61, 230, 238, 122, 0, 1, 0, 0, 0, 30, 201, 224, 54, 0, 0, 0, 0, 69, 244, 119, 191, 122, 92, 30, 64, 20, 215, 239, 61, 230, 238, 122, 0, 1, 0, 0, 0, 165, 199, 89, 56, 0, 0, 0, 0, 9, 112, 113, 191, 226, 123, 236, 63, 226, 70, 226, 60, 230, 238, 122, 0, 1, 0, 0, 0, 219, 208, 35, 47, 0, 0, 0, 0, 88, 172, 59, 191, 11, 146, 8, 64, 182, 214, 239, 61, 0, 127, 0, 0, 1, 0, 0, 0, 30, 201, 224, 54, 0, 0, 0, 0, 243, 108, 64, 63, 11, 146, 8, 64, 14, 215, 239, 61, 0, 127, 0, 0, 1, 0, 0, 0, 98, 212, 156, 43, 0, 0, 0, 0, 72, 168, 202, 62, 11, 146, 8, 64, 86, 210, 185, 189, 0, 127, 0, 0, 1, 0, 0, 0, 171, 233, 83, 22, 0, 0, 0, 0, 16, 39, 193, 190, 11, 146, 8, 64, 131, 210, 185, 189, 0, 127, 0, 0, 1, 0, 0, 0, 51, 229, 203, 26, 0, 0, 0, 0, 72, 168, 202, 62, 11, 146, 8, 64, 86, 210, 185, 189, 0, 210, 138, 0, 1, 0, 0, 0, 171, 233, 83, 22, 0, 0, 0, 0, 244, 88, 196, 187, 254, 171, 205, 63, 2, 215, 239, 61, 0, 210, 138, 0, 1, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 16, 39, 193, 190, 11, 146, 8, 64, 131, 210, 185, 189, 0, 210, 138, 0, 1, 0, 0, 0, 51, 229, 203, 26, 0, 0, 0, 0, 159, 48, 118, 63, 226, 123, 236, 63, 40, 72, 226, 60, 0, 209, 139, 0, 1, 0, 0, 0, 124, 217, 130, 38, 0, 0, 0, 0, 244, 88, 196, 187, 254, 171, 205, 63, 2, 215, 239, 61, 0, 209, 139, 0, 1, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 72, 168, 202, 62, 11, 146, 8, 64, 86, 210, 185, 189, 0, 209, 139, 0, 1, 0, 0, 0, 171, 233, 83, 22, 0, 0, 0, 0, 244, 88, 196, 187, 254, 171, 205, 63, 2, 215, 239, 61, 0, 209, 139, 0, 1, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 9, 112, 113, 191, 226, 123, 236, 63, 226, 70, 226, 60, 0, 209, 139, 0, 1, 0, 0, 0, 219, 208, 35, 47, 0, 0, 0, 0, 16, 39, 193, 190, 11, 146, 8, 64, 131, 210, 185, 189, 0, 209, 139, 0, 1, 0, 0, 0, 51, 229, 203, 26, 0, 0, 0, 0, 69, 244, 119, 191, 122, 92, 30, 64, 20, 215, 239, 61, 104, 72, 0, 0, 1, 0, 0, 0, 165, 199, 89, 56, 0, 0, 0, 0, 88, 172, 59, 191, 11, 146, 8, 64, 182, 214, 239, 61, 104, 72, 0, 0, 1, 0, 0, 0, 30, 201, 224, 54, 0, 0, 0, 0, 88, 172, 59, 191, 11, 146, 8, 64, 34, 29, 114, 188, 104, 72, 0, 0, 1, 0, 0, 0, 152, 202, 102, 53, 0, 0, 0, 0, 9, 112, 113, 191, 226, 123, 236, 63, 226, 70, 226, 60, 212, 15, 138, 0, 1, 0, 0, 0, 219, 208, 35, 47, 0, 0, 0, 0, 69, 244, 119, 191, 122, 92, 30, 64, 20, 215, 239, 61, 212, 15, 138, 0, 1, 0, 0, 0, 165, 199, 89, 56, 0, 0, 0, 0, 88, 172, 59, 191, 11, 146, 8, 64, 34, 29, 114, 188, 212, 15, 138, 0, 1, 0, 0, 0, 152, 202, 102, 53, 0, 0, 0, 0, 16, 39, 193, 190, 11, 146, 8, 64, 131, 210, 185, 189, 230, 1, 132, 0, 1, 0, 0, 0, 51, 229, 203, 26, 0, 0, 0, 0, 9, 112, 113, 191, 226, 123, 236, 63, 226, 70, 226, 60, 230, 1, 132, 0, 1, 0, 0, 0, 219, 208, 35, 47, 0, 0, 0, 0, 88, 172, 59, 191, 11, 146, 8, 64, 34, 29, 114, 188, 230, 1, 132, 0, 1, 0, 0, 0, 152, 202, 102, 53, 0, 0, 0, 0, 88, 172, 59, 191, 11, 146, 8, 64, 182, 214, 239, 61, 0, 127, 0, 0, 1, 0, 0, 0, 30, 201, 224, 54, 0, 0, 0, 0, 16, 39, 193, 190, 11, 146, 8, 64, 131, 210, 185, 189, 0, 127, 0, 0, 1, 0, 0, 0, 51, 229, 203, 26, 0, 0, 0, 0, 88, 172, 59, 191, 11, 146, 8, 64, 34, 29, 114, 188, 0, 127, 0, 0, 1, 0, 0, 0, 152, 202, 102, 53, 0, 0, 0, 0, 243, 108, 64, 63, 11, 146, 8, 64, 14, 215, 239, 61, 152, 72, 0, 0, 1, 0, 0, 0, 98, 212, 156, 43, 0, 0, 0, 0, 224, 180, 124, 63, 122, 92, 30, 64, 19, 215, 239, 61, 152, 72, 0, 0, 1, 0, 0, 0, 152, 210, 102, 45, 0, 0, 0, 0, 243, 108, 64, 63, 11, 146, 8, 64, 160, 26, 114, 188, 152, 72, 0, 0, 1, 0, 0, 0, 215, 211, 39, 44, 0, 0, 0, 0, 72, 168, 202, 62, 11, 146, 8, 64, 86, 210, 185, 189, 0, 127, 0, 0, 1, 0, 0, 0, 171, 233, 83, 22, 0, 0, 0, 0, 243, 108, 64, 63, 11, 146, 8, 64, 14, 215, 239, 61, 0, 127, 0, 0, 1, 0, 0, 0, 98, 212, 156, 43, 0, 0, 0, 0, 243, 108, 64, 63, 11, 146, 8, 64, 160, 26, 114, 188, 0, 127, 0, 0, 1, 0, 0, 0, 215, 211, 39, 44, 0, 0, 0, 0, 224, 180, 124, 63, 122, 92, 30, 64, 19, 215, 239, 61, 44, 15, 138, 0, 1, 0, 0, 0, 152, 210, 102, 45, 0, 0, 0, 0, 159, 48, 118, 63, 226, 123, 236, 63, 40, 72, 226, 60, 44, 15, 138, 0, 1, 0, 0, 0, 124, 217, 130, 38, 0, 0, 0, 0, 243, 108, 64, 63, 11, 146, 8, 64, 160, 26, 114, 188, 44, 15, 138, 0, 1, 0, 0, 0, 215, 211, 39, 44, 0, 0, 0, 0, 72, 168, 202, 62, 11, 146, 8, 64, 86, 210, 185, 189, 26, 1, 132, 0, 1, 0, 0, 0, 171, 233, 83, 22, 0, 0, 0, 0, 243, 108, 64, 63, 11, 146, 8, 64, 160, 26, 114, 188, 26, 1, 132, 0, 1, 0, 0, 0, 215, 211, 39, 44, 0, 0, 0, 0, 159, 48, 118, 63, 226, 123, 236, 63, 40, 72, 226, 60, 26, 1, 132, 0, 1, 0, 0, 0, 124, 217, 130, 38, 0, 0, 0, 0, 37, 164, 169, 190, 32, 189, 232, 189, 132, 151, 2, 62, 189, 2, 149, 0, 3, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 230, 177, 143, 190, 184, 68, 194, 189, 136, 50, 197, 61, 189, 2, 149, 0, 3, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 148, 112, 143, 190, 142, 95, 124, 191, 201, 84, 151, 61, 189, 2, 149, 0, 3, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 230, 177, 143, 190, 184, 68, 194, 189, 136, 50, 197, 61, 235, 119, 37, 0, 3, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 37, 164, 169, 190, 32, 189, 232, 189, 132, 151, 2, 62, 235, 119, 37, 0, 3, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 97, 8, 82, 190, 24, 7, 203, 189, 18, 109, 28, 62, 235, 119, 37, 0, 3, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 148, 112, 143, 190, 142, 95, 124, 191, 201, 84, 151, 61, 76, 2, 155, 0, 3, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 230, 177, 143, 190, 184, 68, 194, 189, 136, 50, 197, 61, 76, 2, 155, 0, 3, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 97, 8, 82, 190, 24, 7, 203, 189, 18, 109, 28, 62, 76, 2, 155, 0, 3, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 37, 164, 169, 190, 32, 189, 232, 189, 132, 151, 2, 62, 233, 247, 124, 0, 3, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 148, 112, 143, 190, 142, 95, 124, 191, 201, 84, 151, 61, 233, 247, 124, 0, 3, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 97, 8, 82, 190, 24, 7, 203, 189, 18, 109, 28, 62, 233, 247, 124, 0, 3, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0 ),
"array_index_data": PoolByteArray( 0, 0, 2, 0, 1, 0, 3, 0, 5, 0, 4, 0, 6, 0, 8, 0, 7, 0, 9, 0, 11, 0, 10, 0, 12, 0, 14, 0, 13, 0, 15, 0, 17, 0, 16, 0, 18, 0, 20, 0, 19, 0, 21, 0, 23, 0, 22, 0, 24, 0, 26, 0, 25, 0, 27, 0, 29, 0, 28, 0, 30, 0, 32, 0, 31, 0, 33, 0, 35, 0, 34, 0, 36, 0, 38, 0, 37, 0, 39, 0, 41, 0, 40, 0, 42, 0, 44, 0, 43, 0, 45, 0, 47, 0, 46, 0, 48, 0, 50, 0, 49, 0, 51, 0, 53, 0, 52, 0, 51, 0, 54, 0, 53, 0, 55, 0, 57, 0, 56, 0, 58, 0, 60, 0, 59, 0, 61, 0, 63, 0, 62, 0, 64, 0, 66, 0, 65, 0, 67, 0, 69, 0, 68, 0, 70, 0, 72, 0, 71, 0, 73, 0, 75, 0, 74, 0, 76, 0, 78, 0, 77, 0, 79, 0, 81, 0, 80, 0, 82, 0, 84, 0, 83, 0, 85, 0, 87, 0, 86, 0, 88, 0, 90, 0, 89, 0, 91, 0, 93, 0, 92, 0, 94, 0, 96, 0, 95, 0, 97, 0, 99, 0, 98, 0 ),
"blend_shape_data": [  ],
"format": 97731,
"index_count": 102,
"primitive": 4,
"skeleton_aabb": [ AABB( -0.968571, -0.195778, -1.54204, 1.95571, 2.67017, 1.72951 ), AABB( -0.968571, 1.60681, -0.0907336, 1.95571, 0.867583, 0.207853 ), AABB( 0.221506, -0.985833, 0.0738924, 0.12622, 0.890975, 0.0788674 ), AABB( -0.33133, -0.985833, 0.0738922, 0.12622, 0.890975, 0.0788676 ), AABB( -0.636858, 0.298441, -1.80097, 0.576242, 0.608677, 0.346494 ) ],
"vertex_count": 100
}

[sub_resource type="SpatialMaterial" id=3]
albedo_color = Color( 0, 0, 0, 1 )

[sub_resource type="Animation" id=4]
resource_name = "idle"
length = 5.0
tracks/0/type = "transform"
tracks/0/path = NodePath("Armature")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = true
tracks/0/enabled = true
tracks/0/keys = PoolRealArray( 0, 1, -0.00370395, 0.392027, 0.00157142, 0, 0, 0, 1, 0.399053, 0.399053, 0.399053, 5, 1, -0.00370395, 0.392027, 0.00157142, 0, 0, 0, 1, 0.399053, 0.399053, 0.399053 )
tracks/1/type = "transform"
tracks/1/path = NodePath("Armature/Skeleton:body")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = true
tracks/1/enabled = true
tracks/1/keys = PoolRealArray( 0, 1, -9.31323e-10, -2.49421e-09, -1.19274e-07, -3.72529e-09, 0, 0, 1, 1, 1, 1, 5, 1, -9.31323e-10, -2.49421e-09, -1.19274e-07, -3.72529e-09, 0, 0, 1, 1, 1, 1 )
tracks/2/type = "transform"
tracks/2/path = NodePath("Armature/Skeleton:head")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = true
tracks/2/enabled = true
tracks/2/keys = PoolRealArray( 0, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.162926, -0.0766355, 0.298563, 0.937253, 1, 1, 1, 0.333333, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.162926, -0.0766355, 0.298563, 0.937253, 1, 1, 1, 0.4, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.163239, -0.0752196, 0.293047, 0.939052, 1, 1, 1, 0.466667, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.164068, -0.071317, 0.277843, 0.943821, 1, 1, 1, 0.533333, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.165374, -0.0646508, 0.251872, 0.951332, 1, 1, 1, 0.6, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.166984, -0.0552433, 0.215221, 0.960596, 1, 1, 1, 0.8, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.170981, -0.0143316, 0.0558341, 0.983587, 1, 1, 1, 1, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.170127, 0.0286215, -0.111506, 0.978675, 1, 1, 1, 1.06667, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.169142, 0.0390322, -0.152065, 0.973008, 1, 1, 1, 1.13333, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.168188, 0.0469224, -0.182804, 0.967519, 1, 1, 1, 1.2, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.167478, 0.0519973, -0.202576, 0.963437, 1, 1, 1, 1.26667, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.167133, 0.0542901, -0.211508, 0.961449, 1, 1, 1, 1.33333, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.167085, 0.0545991, -0.212712, 0.961174, 1, 1, 1, 2.13333, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.166693, 0.0545125, -0.212734, 0.961242, 1, 1, 1, 2.2, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.160389, 0.0531168, -0.213087, 0.962314, 1, 1, 1, 2.26667, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.143915, 0.0494665, -0.213964, 0.964915, 1, 1, 1, 2.33333, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.118982, 0.0439319, -0.215168, 0.968306, 1, 1, 1, 2.53333, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.0259356, 0.0231759, -0.218381, 0.975244, 1, 1, 1, 2.6, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.00483676, 0.0184473, -0.218831, 0.975576, 1, 1, 1, 2.66667, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, 0.00716344, 0.0157542, -0.219042, 0.975562, 1, 1, 1, 2.73333, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, 0.0090359, 0.0155068, -0.218046, 0.975773, 1, 1, 1, 2.8, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, 0.00818323, 0.0169771, -0.210433, 0.977426, 1, 1, 1, 2.86667, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, 0.00626818, 0.0202158, -0.193598, 0.980853, 1, 1, 1, 2.93333, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, 0.00322885, 0.0252212, -0.167399, 0.985561, 1, 1, 1, 3, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.000875834, 0.0317873, -0.132694, 0.990647, 1, 1, 1, 3.2, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.0195403, 0.0590287, 0.0155385, 0.997944, 1, 1, 1, 3.4, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.0427081, 0.0867152, 0.173964, 0.979996, 1, 1, 1, 3.46667, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.0501425, 0.0938019, 0.215965, 0.970591, 1, 1, 1, 3.53333, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.0571267, 0.0993831, 0.24951, 0.961563, 1, 1, 1, 3.6, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.0635903, 0.103409, 0.273977, 0.954044, 1, 1, 1, 3.66667, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.0695648, 0.106027, 0.29, 0.948588, 1, 1, 1, 3.73333, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.074994, 0.107073, 0.296407, 0.946073, 1, 1, 1, 3.8, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.0802417, 0.106534, 0.297465, 0.945371, 1, 1, 1, 3.86667, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.0857963, 0.103716, 0.297885, 0.945064, 1, 1, 1, 3.93333, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.0916975, 0.0985216, 0.298325, 0.944927, 1, 1, 1, 4, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.0978823, 0.0911518, 0.298768, 0.944906, 1, 1, 1, 4.06667, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.10433, 0.0813511, 0.299196, 0.944976, 1, 1, 1, 4.2, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.11756, 0.0561325, 0.2999, 0.945034, 1, 1, 1, 4.4, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.136492, 0.00932184, 0.300259, 0.943996, 1, 1, 1, 4.66667, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.155012, -0.0479258, 0.299443, 0.940217, 1, 1, 1, 4.73333, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.157913, -0.0580744, 0.299167, 0.93925, 1, 1, 1, 4.8, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.160156, -0.066178, 0.298919, 0.938412, 1, 1, 1, 4.86666, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.161709, -0.0719625, 0.298727, 0.937781, 1, 1, 1, 4.93333, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.162605, -0.0753841, 0.298608, 0.937396, 1, 1, 1, 5, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, -0.162926, -0.0766355, 0.298563, 0.937253, 1, 1, 1 )
tracks/3/type = "transform"
tracks/3/path = NodePath("Armature/Skeleton:leg.l")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = true
tracks/3/enabled = true
tracks/3/keys = PoolRealArray( 0, 1, 5.96046e-08, -4.47035e-08, -2.5332e-07, -3.72529e-09, 2.16841e-19, -5.82077e-11, 1, 1, 1, 1, 5, 1, 5.96046e-08, -4.47035e-08, -2.5332e-07, -3.72529e-09, 2.16841e-19, -5.82077e-11, 1, 1, 1, 1 )
tracks/4/type = "transform"
tracks/4/path = NodePath("Armature/Skeleton:leg.r")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = true
tracks/4/enabled = true
tracks/4/keys = PoolRealArray( 0, 1, -8.9407e-08, -2.98023e-08, -5.96046e-08, -1.86265e-09, 9.31323e-10, -1.39698e-09, 1, 1, 1, 1, 5, 1, -8.9407e-08, -2.98023e-08, -5.96046e-08, -1.86265e-09, 9.31323e-10, -1.39698e-09, 1, 1, 1, 1 )
tracks/5/type = "transform"
tracks/5/path = NodePath("Armature/Skeleton:tail")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = true
tracks/5/enabled = true
tracks/5/keys = PoolRealArray( 0, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, 4.88498e-15, -2.98023e-08, -4.47035e-08, 1, 1, 1, 1, 0.0666667, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.000465005, -0.00114554, 0.00110642, 0.999999, 1, 1, 1, 0.133333, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.00173624, -0.0042783, 0.00413224, 0.999981, 1, 1, 1, 0.2, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.00389456, -0.00959662, 0.00926914, 0.999903, 1, 1, 1, 0.266667, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.006951, -0.0171283, 0.0165439, 0.999692, 1, 1, 1, 0.333333, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.0108399, -0.0267118, 0.0258003, 0.999251, 1, 1, 1, 0.533333, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.0278564, -0.0686434, 0.0663013, 0.995046, 1, 1, 1, 0.933333, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.0790004, -0.194673, 0.188031, 0.95943, 1, 1, 1, 1.33333, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.127735, -0.314764, 0.304024, 0.890043, 1, 1, 1, 1.53333, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.142901, -0.352137, 0.340123, 0.860171, 1, 1, 1, 1.6, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.146353, -0.360643, 0.348338, 0.852748, 1, 1, 1, 1.66667, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.149068, -0.367334, 0.354801, 0.846735, 1, 1, 1, 1.73333, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.150949, -0.37197, 0.359278, 0.84248, 1, 1, 1, 1.8, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.152133, -0.374886, 0.362095, 0.839764, 1, 1, 1, 1.86667, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.152579, -0.375985, 0.363157, 0.838732, 1, 1, 1, 1.93333, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.152497, -0.375783, 0.362961, 0.838923, 1, 1, 1, 2, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.152155, -0.374941, 0.362149, 0.839712, 1, 1, 1, 2.06667, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.151528, -0.373397, 0.360656, 0.841155, 1, 1, 1, 2.13333, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.150653, -0.371239, 0.358572, 0.843156, 1, 1, 1, 2.2, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.149504, -0.368407, 0.355837, 0.845757, 1, 1, 1, 2.33333, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.146388, -0.36073, 0.348422, 0.85267, 1, 1, 1, 3.2, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.0989245, -0.24377, 0.235452, 0.935603, 1, 1, 1, 3.8, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.0498184, -0.122762, 0.118574, 0.984067, 1, 1, 1, 4.93333, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.000166998, -0.000411249, 0.000397167, 1, 1, 1, 1, 5, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, 4.88498e-15, -2.98023e-08, -4.47035e-08, 1, 1, 1, 1 )

[sub_resource type="Animation" id=5]
resource_name = "jump"
length = 0.25
tracks/0/type = "transform"
tracks/0/path = NodePath("Armature")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = true
tracks/0/enabled = true
tracks/0/keys = PoolRealArray( 0, 1, -0.00370395, 0.392027, 0.00157142, 0, 0, 0, 1, 0.399053, 0.399053, 0.399053, 0.25, 1, -0.00370395, 0.392027, 0.00157142, 0, 0, 0, 1, 0.399053, 0.399053, 0.399053 )
tracks/1/type = "transform"
tracks/1/path = NodePath("Armature/Skeleton:body")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = true
tracks/1/enabled = true
tracks/1/keys = PoolRealArray( 0, 1, -9.31323e-10, -2.49421e-09, -1.19274e-07, -3.72529e-09, 0, 0, 1, 1, 1, 1, 0.25, 1, -9.31323e-10, -2.49421e-09, -1.19274e-07, -3.72529e-09, 0, 0, 1, 1, 1, 1 )
tracks/2/type = "transform"
tracks/2/path = NodePath("Armature/Skeleton:head")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = true
tracks/2/enabled = true
tracks/2/keys = PoolRealArray( 0, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, 7.45058e-09, 3.55271e-15, 1.31006e-14, 1, 1, 1, 1, 0.25, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, 7.45058e-09, 3.55271e-15, 1.31006e-14, 1, 1, 1, 1 )
tracks/3/type = "transform"
tracks/3/path = NodePath("Armature/Skeleton:leg.l")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = true
tracks/3/enabled = true
tracks/3/keys = PoolRealArray( 0, 1, 5.96046e-08, -4.47035e-08, -2.5332e-07, -3.72529e-09, 2.16841e-19, -5.82077e-11, 1, 1, 1, 1, 0.0666667, 1, 5.96046e-08, -4.47035e-08, -2.5332e-07, 0.0269519, 0.0500231, 0.00906999, 0.998343, 1, 1, 1, 0.133333, 1, 5.96046e-08, -4.47035e-08, -2.5332e-07, 0.088023, 0.16337, 0.0296217, 0.982184, 1, 1, 1, 0.2, 1, 5.96046e-08, -4.47035e-08, -2.5332e-07, 0.142609, 0.264681, 0.047991, 0.952525, 1, 1, 1, 0.25, 1, 5.96046e-08, -4.47035e-08, -2.5332e-07, 0.157281, 0.291913, 0.0529286, 0.941938, 1, 1, 1 )
tracks/4/type = "transform"
tracks/4/path = NodePath("Armature/Skeleton:leg.r")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = true
tracks/4/enabled = true
tracks/4/keys = PoolRealArray( 0, 1, -8.9407e-08, -2.98023e-08, -5.96046e-08, -1.86265e-09, 9.31323e-10, -1.39698e-09, 1, 1, 1, 1, 0.0666667, 1, -8.9407e-08, -2.98023e-08, -5.96046e-08, 0.0242995, -0.0537494, -0.00931678, 0.998215, 1, 1, 1, 0.133333, 1, -8.9407e-08, -2.98023e-08, -5.96046e-08, 0.079387, -0.1756, -0.030438, 0.980783, 1, 1, 1, 0.2, 1, -8.9407e-08, -2.98023e-08, -5.96046e-08, 0.128521, -0.284282, -0.0492766, 0.948809, 1, 1, 1, 0.25, 1, -8.9407e-08, -2.98023e-08, -5.96046e-08, 0.14169, -0.313409, -0.0543255, 0.937415, 1, 1, 1 )
tracks/5/type = "transform"
tracks/5/path = NodePath("Armature/Skeleton:tail")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = true
tracks/5/enabled = true
tracks/5/keys = PoolRealArray( 0, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, 4.88498e-15, -2.98023e-08, -4.47035e-08, 1, 1, 1, 1, 0.0666667, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.0978841, 0.0504407, -0.0361955, 0.993259, 1, 1, 1, 0.133333, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.324526, 0.167232, -0.120003, 0.92321, 1, 1, 1, 0.2, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.508898, 0.262241, -0.18818, 0.798023, 1, 1, 1, 0.25, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.552269, 0.284591, -0.204218, 0.756507, 1, 1, 1 )

[sub_resource type="Animation" id=6]
resource_name = "walk"
length = 0.625
tracks/0/type = "transform"
tracks/0/path = NodePath("Armature")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = true
tracks/0/enabled = true
tracks/0/keys = PoolRealArray( 0, 1, -0.00370395, 0.392027, 0.00157142, 0, 0, 0, 1, 0.399053, 0.399053, 0.399053, 0.625, 1, -0.00370395, 0.392027, 0.00157142, 0, 0, 0, 1, 0.399053, 0.399053, 0.399053 )
tracks/1/type = "transform"
tracks/1/path = NodePath("Armature/Skeleton:body")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = true
tracks/1/enabled = true
tracks/1/keys = PoolRealArray( 0, 1, -9.31323e-10, -0.0105101, -0.1751, -3.72529e-09, 0, 0, 1, 1, 1, 1, 0.0666667, 1, -9.31323e-10, -0.00677569, -0.112885, 1.13621e-07, 0, 0, 1, 1, 1, 1, 0.133333, 1, -9.31323e-10, -0.0011627, -0.019371, 1.17347e-07, 0, 0, 1, 1, 1, 1, 0.266667, 1, -9.31323e-10, -0.00898682, -0.149723, 1.13621e-07, 0, 0, 1, 1, 1, 1, 0.333333, 1, -9.31323e-10, -0.00905668, -0.150887, -3.72529e-09, 0, 0, 1, 1, 1, 1, 0.4, 1, -9.31323e-10, -0.00297404, -0.0495483, 1.13621e-07, 0, 0, 1, 1, 1, 1, 0.466667, 1, -9.31323e-10, -0.00050775, -0.00845932, 1.13621e-07, 0, 0, 1, 1, 1, 1, 0.533333, 1, -9.31323e-10, -0.00688481, -0.114703, 1.13621e-07, 0, 0, 1, 1, 1, 1, 0.6, 1, -9.31323e-10, -0.0105101, -0.1751, -3.72529e-09, 0, 0, 1, 1, 1, 1, 0.625, 1, -9.31323e-10, -0.0105101, -0.1751, -3.72529e-09, 0, 0, 1, 1, 1, 1 )
tracks/2/type = "transform"
tracks/2/path = NodePath("Armature/Skeleton:head")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = true
tracks/2/enabled = true
tracks/2/keys = PoolRealArray( 0, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, 1.8103e-08, -0.00551495, 0.0695381, 0.997564, 1, 1, 1, 0.0666667, 1, 1.42109e-14, -5.96046e-08, 4.76837e-07, 2.80362e-08, -0.00413053, 0.0520819, 0.998634, 1, 1, 1, 0.266667, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, 7.39393e-09, 0.00521604, -0.0657691, 0.997821, 1, 1, 1, 0.333333, 1, 1.06581e-14, -4.47035e-08, 4.76837e-07, 9.9007e-09, 0.00501672, -0.0632559, 0.997985, 1, 1, 1, 0.4, 1, 1.42109e-14, -5.96046e-08, 4.76837e-07, 9.2076e-09, 0.00218521, -0.0275533, 0.999618, 1, 1, 1, 0.466667, 1, 7.10543e-15, -2.98023e-08, 3.57628e-07, 2.70367e-09, -0.00173364, 0.0218594, 0.99976, 1, 1, 1, 0.533333, 1, 1.42109e-14, -5.96046e-08, 4.76837e-07, 1.6094e-08, -0.00472139, 0.0595321, 0.998215, 1, 1, 1, 0.6, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, 1.80155e-08, -0.00551495, 0.0695381, 0.997564, 1, 1, 1, 0.625, 1, 1.06581e-14, -4.47035e-08, 3.57628e-07, 1.80155e-08, -0.00551495, 0.0695381, 0.997564, 1, 1, 1 )
tracks/3/type = "transform"
tracks/3/path = NodePath("Armature/Skeleton:leg.l")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = true
tracks/3/enabled = true
tracks/3/keys = PoolRealArray( 0, 1, 5.96046e-08, -4.47035e-08, -2.5332e-07, -0.382572, 1.57941e-05, -0.00922675, 0.92388, 1, 1, 1, 0.0666667, 1, 5.96046e-08, -4.47035e-08, -2.5332e-07, -0.295213, 1.23943e-05, -0.00712015, 0.955405, 1, 0.999999, 1, 0.133333, 1, 5.96046e-08, -4.47035e-08, -2.5332e-07, -0.0574162, 3.01804e-06, -0.00138608, 0.998349, 1, 1, 1, 0.266667, 1, 5.96046e-08, -4.47035e-08, -2.5332e-07, 0.364496, -1.3653e-05, 0.00878782, 0.931164, 1, 1, 1, 0.333333, 1, 5.96046e-08, -4.47035e-08, -2.5332e-07, 0.352361, -1.32057e-05, 0.00849529, 0.935826, 1, 1, 1, 0.4, 1, 5.96046e-08, -4.47035e-08, -2.5332e-07, 0.16051, -5.58242e-06, 0.00386889, 0.987027, 1, 0.999999, 1, 0.466667, 1, 5.96046e-08, -4.47035e-08, -2.5332e-07, -0.128124, 5.80778e-06, -0.00309108, 0.991753, 1, 1, 1, 0.533333, 1, 5.96046e-08, -4.47035e-08, -2.5332e-07, -0.333447, 1.38999e-05, -0.0080421, 0.942734, 1, 1, 1, 0.6, 1, 5.96046e-08, -4.47035e-08, -2.5332e-07, -0.382572, 1.57941e-05, -0.00922675, 0.92388, 1, 1, 1, 0.625, 1, 5.96046e-08, -4.47035e-08, -2.5332e-07, -0.382572, 1.57941e-05, -0.00922675, 0.92388, 1, 1, 1 )
tracks/4/type = "transform"
tracks/4/path = NodePath("Armature/Skeleton:leg.r")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = true
tracks/4/enabled = true
tracks/4/keys = PoolRealArray( 0, 1, -8.9407e-08, -2.98023e-08, -5.96046e-08, 0.382156, -0.0184588, -0.0079385, 0.92388, 1, 1, 1, 0.0666667, 1, -8.9407e-08, -2.98023e-08, -5.96046e-08, 0.29489, -0.0142435, -0.00612546, 0.955405, 1, 1, 1, 0.133333, 1, -8.9407e-08, -2.98023e-08, -4.47035e-08, 0.0573529, -0.00276996, -0.00119066, 0.998349, 1, 1, 1, 0.266667, 1, -8.9407e-08, -2.98023e-08, -5.96046e-08, -0.364097, 0.017587, 0.00756489, 0.931164, 1, 1, 1, 0.333333, 1, -8.9407e-08, -2.98023e-08, -5.96046e-08, -0.351977, 0.0170017, 0.0073131, 0.935826, 1, 1, 1, 0.4, 1, -8.9407e-08, -2.98023e-08, -4.47035e-08, -0.160334, 0.00774481, 0.00333176, 0.987027, 1, 1, 1, 0.466667, 1, -8.9407e-08, -2.98023e-08, -5.96046e-08, 0.127983, -0.00618155, -0.00265799, 0.991754, 1, 1, 1, 0.533333, 1, -8.9407e-08, -2.98023e-08, -5.96046e-08, 0.333082, -0.0160883, -0.00691891, 0.942735, 1, 1, 1, 0.6, 1, -8.9407e-08, -2.98023e-08, -5.96046e-08, 0.382156, -0.0184588, -0.0079385, 0.92388, 1, 1, 1, 0.625, 1, -8.9407e-08, -2.98023e-08, -5.96046e-08, 0.382156, -0.0184588, -0.0079385, 0.92388, 1, 1, 1 )
tracks/5/type = "transform"
tracks/5/path = NodePath("Armature/Skeleton:tail")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = true
tracks/5/enabled = true
tracks/5/keys = PoolRealArray( 0, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, 0.0648777, 0.0861191, -0.0554371, 0.992623, 1, 1, 1, 0.0666667, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, 0.0273239, 0.03627, -0.0233481, 0.998696, 1, 1, 1, 0.133333, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.0674138, -0.0894854, 0.057604, 0.992033, 1, 1, 1, 0.266667, 1, -8.19564e-08, -8.9407e-08, 1.19209e-07, -0.228827, -0.303746, 0.195529, 0.903961, 1, 1, 1, 0.333333, 1, -8.19564e-08, -8.9407e-08, 1.19209e-07, -0.223982, -0.297316, 0.19139, 0.908188, 1, 1, 1, 0.4, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.150122, -0.199273, 0.128277, 0.959843, 1, 1, 1, 0.466667, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, -0.0400174, -0.0531193, 0.0341942, 0.9972, 1, 1, 1, 0.533333, 1, -8.19564e-08, -8.9407e-08, 1.19209e-07, 0.0435117, 0.0577578, -0.0371802, 0.996689, 1, 1, 1, 0.6, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, 0.0648777, 0.0861191, -0.0554371, 0.992623, 1, 1, 1, 0.625, 1, -7.45058e-08, -5.96046e-08, 8.9407e-08, 0.0648777, 0.0861191, -0.0554371, 0.992623, 1, 1, 1 )

[sub_resource type="CapsuleShape" id=7]
radius = 0.419898
height = 0.553413

[node name="Enemy" type="KinematicBody"]
script = SubResource( 1 )

[node name="Graphics" parent="." instance=ExtResource( 1 )]
transform = Transform( -1, 0, -3.25841e-07, 0, 1, 0, 3.25841e-07, 0, -1, 0, 0, 0 )

[node name="Cone" parent="Graphics/Armature/Skeleton" index="0"]
mesh = SubResource( 2 )
material/0 = SubResource( 3 )

[node name="AnimationPlayer" parent="Graphics" index="1"]
anims/idle = SubResource( 4 )
anims/jump = SubResource( 5 )
anims/walk = SubResource( 6 )

[node name="CollisionShape" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, -1, 0, 1, -1.62921e-07, 0, 0.666457, 0 )
shape = SubResource( 7 )

[editable path="Graphics"]
